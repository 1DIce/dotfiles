#
# Start profiling (uncomment when necessary)
#
# See: https://stackoverflow.com/a/4351664/2103996

# Per-command profiling:

# zmodload zsh/datetime
# setopt promptsubst
# PS4='+$EPOCHREALTIME %N:%i> '
# exec 3>&2 2> startlog.$$
# setopt xtrace prompt_subst

# Per-function profiling:

# zmodload zsh/zprof

#
# Global
#


source ~/.commonrc.local

# Lines configured by zsh-newuser-install
HISTFILE=~/.histfile
HISTSIZE=200000
SAVEHIST=$HISTSIZE
setopt share_history
setopt autocd extendedglob
bindkey -e

# End of lines configured by zsh-newuser-install
# The following lines were added by compinstall
zstyle :compinstall filename '/home/lars/.zshrc'

autoload -Uz compinit
compinit -u
# End of lines added by compinstall

# aliases
alias l="eza -l --icons"       # List in long format, exclude dotfiles
alias la="l -a"      # List in long format, include dotfiles
alias ld="l -a --only-dirs"   # List in long format, only directories
alias ll="l"
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias cheat="cht.sh"
alias v="nvim"
alias gvim="neovide.exe --wsl"
alias g="git"
alias groot='cd $(git rev-parse --show-toplevel)'
alias gitroot='cd $(git rev-parse --show-toplevel)'
alias fm="vicd ./"
alias marktext="marktext.AppImage"
alias notes="nvim  '+let g:auto_session_enabled = v:false' -c VimwikiIndex"


# Make Tab autocomplete regardless of filename case
set completion-ignore-case on
# List all matches in case multiple possible completions are possible
set show-all-if-ambiguous on

# Go Lang installation
export PATH=$PATH:/usr/local/go/bin
export PATH=$PATH:~/go/bin

# Default editor
export EDITOR=nvim

function cdf {
  local dst="$(fzf-dir "$@")"
  if [ -z "$dst" ]; then
    echo 'Directory picking cancelled/failed'
    return 1
  fi
  cd "$dst"
}

# bat as pager for man
export MANPAGER="sh -c 'col -bx | bat -l man -p'"

export BAT_THEME=tokyonight_night


# Syntax highl
export LESSOPEN='|~/.config/less/lessfilter.sh %s'
export LESS=' -R'

export CHROME_BIN=google-chrome-stable

# Special settings while in tmux
if [[ -n "$TMUX" ]]; then
  # capture tmux pane content and pipe it into vim
  alias tv="tmux capture-pane -Jp -S- | nvim"
fi

# Bashmarks aliases. Bashmarks is source in .zshenv
alias blist="bls"
alias bfind='bls --no-color | fzf | cut -f1 -d "=" | xargs bcd'

# ripgrep for fzf if available
export FZF_DEFAULT_COMMAND='rg --files'

# Setup fzf
if [[ -d "$HOME/.fzf/bin" ]]; then
  PATH="$HOME/.fzf/bin:$PATH"
fi
eval "$(fzf --zsh)"
# Use fd for listing path candidates for fzf.
# Example: running "vim **"
_fzf_compgen_path() {
  fd --hidden --exclude .git . "$1"
}

# Use fd to generate a list for directory completion
_fzf_compgen_dir() {
  fd --type=d --hidden --exclude .git . "$1"
}

export FZF_CTRL_T_OPTS="--preview 'bat -n --color=always --line-range :500 {}'"
export FZF_ALT_C_OPTS="--preview 'eza --tree --color=always {} | head -200'"

# Advanced customization of fzf options via _fzf_comprun function
# - The first argument to the function is the name of the command.
# - You should make sure to pass the rest of the arguments to fzf.
_fzf_comprun() {
  local command=$1
  shift

  case "$command" in
    cd)           fzf --preview 'eza --tree --color=always {} | head -200' "$@" ;;
    export|unset) fzf --preview "eval 'echo \$'{}"         "$@" ;;
    ssh)          fzf --preview 'dig {}'                   "$@" ;;
    *)            fzf --preview "bat -n --color=always --line-range :500 {} || eza --tree --color=always {} | head -200" "$@" ;;
  esac
}



if [[ -o interactive ]]; then
  #setup thefuck
  eval $(thefuck --alias)

  # zplug
  source ~/.zplug/init.zsh

  zplug "chitoku-k/fzf-zsh-completions"
  zplug "Aloxaf/fzf-tab"
  zplug "spaceship-prompt/spaceship-prompt", use:spaceship.zsh, from:github, as:theme

  # Install plugins if there are plugins that have not been installed
  if ! zplug check --verbose; then
      printf "Install? [y/N]: "
      if read -q; then
          echo; zplug install
      fi
  fi
  # Then, source plugins and add commands to $PATH
  zplug load

  #fzf-tab
  #disable sort when completing `git checkout`
  zstyle ':completion:*:git-checkout:*' sort false
  # set descriptions format to enable group support
  zstyle ':completion:*:descriptions' format '[%d]'
  # set list-colors to enable filename colorizing
  zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
  # configure preview
  zstyle ':fzf-tab:complete:*:*' fzf-preview 'less ${(Q)realpath}'
fi

#
# End profiling (uncomment when necessary)
#

# Per-command profiling:

# unsetopt xtrace
# exec 2>&3 3>&-

# Per-function profiling:

# zprof
