
source ~/.commonrc.local

# Lines configured by zsh-newuser-install
HISTFILE=~/.histfile
HISTSIZE=200000
SAVEHIST=$HISTSIZE
setopt share_history
setopt autocd extendedglob
bindkey -e

# End of lines configured by zsh-newuser-install
# The following lines were added by compinstall
zstyle :compinstall filename '/home/lars/.zshrc'

autoload -Uz compinit
compinit
# End of lines added by compinstall

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# aliases
alias l="lsd --date '+%e.%m.%y %H:%M' -l"       # List in long format, exclude dotfiles
alias la="l -a"      # List in long format, include dotfiles
alias ld="l -d */"   # List in long format, only directories
alias ll="l"
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias cheat="cht.sh"
alias v="nvim"
alias gvim="neovide.exe --wsl"
alias g="git"
alias groot='cd $(git rev-parse --show-toplevel)'
alias gitroot='cd $(git rev-parse --show-toplevel)'
alias fm="vicd ./"
alias marktext="marktext.AppImage"
alias notes="nvim  '+let g:auto_session_enabled = v:false' -c VimwikiIndex"


# Make Tab autocomplete regardless of filename case
set completion-ignore-case on
# List all matches in case multiple possible completions are possible
set show-all-if-ambiguous on

# Go Lang installation
export PATH=$PATH:/usr/local/go/bin
export PATH=$PATH:~/go/bin

# Default editor
export EDITOR=nvim

function cdf {
  local dst="$(fzf-dir "$@")"
  if [ -z "$dst" ]; then
    echo 'Directory picking cancelled/failed'
    return 1
  fi
  cd "$dst"
}

# bat as pager for man
export MANPAGER="sh -c 'col -bx | batcat -l man -p'"


# Syntax highl
export LESSOPEN='|~/.config/less/lessfilter.sh %s'
export LESS=' -R'

# special WSL2 settings
if [ ! -z "$WSL_DISTRO_NAME" ]; then
  # xserver if running on wsl2
  export DISPLAY=$(ip route list default | awk '{print $3}'):0
  export LIBGL_ALWAYS_INDIRECT=1

  export CHROME_BIN=/mnt/c/Program\ Files/Google/Chrome/Application/chrome.exe

  alias docker="sudo podman"
  alias docker-compose="sudo podman-compose"
fi


# Special settings while in tmux
if [[ -n "$TMUX" ]]; then
  # making sure that colors are correct in tmux
  export TERM="tmux-256color"
fi


# Bashmarks aliases. Bashmarks is source in .zshenv
alias blist="bls"
alias bfind='bls --no-color | fzf | cut -f1 -d "=" | xargs bcd'

# ripgrep for fzf if available
if type rg &> /dev/null; then
  export FZF_DEFAULT_COMMAND='rg --files'
fi
# FZF terminal history search. trigger it with CRTL+r
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# setup mcfly history search
export MCFLY_KEY_SCHEME=vim
export MCFLY_FUZZY=2
export MCFLY_RESULTS=50
export MCFLY_INTERFACE_VIEW=BOTTOM
eval "$(mcfly init zsh)"

if [[ -o interactive ]]; then
  # zplug
  source ~/.zplug/init.zsh

  zplug "chitoku-k/fzf-zsh-completions"
  zplug "Aloxaf/fzf-tab"
  zplug "spaceship-prompt/spaceship-prompt", use:spaceship.zsh, from:github, as:theme

  # Install plugins if there are plugins that have not been installed
  if ! zplug check --verbose; then
      printf "Install? [y/N]: "
      if read -q; then
          echo; zplug install
      fi
  fi
  # Then, source plugins and add commands to $PATH
  zplug load

  #fzf-tab
  #disable sort when completing `git checkout`
  zstyle ':completion:*:git-checkout:*' sort false
  # set descriptions format to enable group support
  zstyle ':completion:*:descriptions' format '[%d]'
  # set list-colors to enable filename colorizing
  zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
  # configure preview
  zstyle ':fzf-tab:complete:*:*' fzf-preview 'less ${(Q)realpath}'
fi

